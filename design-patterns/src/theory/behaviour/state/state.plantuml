@startuml

title __STATE's Class Diagram__\n

  namespace theory.behaviour.state {
    class theory.behaviour.state.Gate {
        + cardInvalid()
        + cardValid()
        + changeGateState()
        + personCrossedTheGate()
        + personCrossingTheGate()
    }
  }
  

  namespace theory.behaviour.state {
    class theory.behaviour.state.GateClosedState {
        + GateClosedState()
        + cardInvalid()
        + cardValid()
        + personCrossedTheGate()
        + personCrossingTheGate()
    }
  }
  

  namespace theory.behaviour.state {
    class theory.behaviour.state.GateOpenState {
        + GateOpenState()
        + cardInvalid()
        + cardValid()
        + personCrossedTheGate()
        + personCrossingTheGate()
    }
  }
  

  namespace theory.behaviour.state {
    interface theory.behaviour.state.GateState {
        {abstract} + cardInvalid()
        {abstract} + cardValid()
        {abstract} + personCrossedTheGate()
        {abstract} + personCrossingTheGate()
    }
  }
  

  namespace theory.behaviour.state {
    class theory.behaviour.state.Main {
        {static} + main()
    }
  }
  

  theory.behaviour.state.Gate o-- theory.behaviour.state.GateState : gateState
  theory.behaviour.state.GateClosedState .up.|> theory.behaviour.state.GateState
  theory.behaviour.state.GateClosedState o-- theory.behaviour.state.Gate : gate
  theory.behaviour.state.GateOpenState .up.|> theory.behaviour.state.GateState
  theory.behaviour.state.GateOpenState o-- theory.behaviour.state.Gate : gate


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
