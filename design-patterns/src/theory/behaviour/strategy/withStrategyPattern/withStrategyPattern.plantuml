@startuml

title __WITHSTRATEGYPATTERN's Class Diagram__\n

  namespace theory.behaviour.strategy.withStrategyPattern {
    class theory.behaviour.strategy.withStrategyPattern.DefaultFlyStrategy {
        + fly()
    }
  }
  

  namespace theory.behaviour.strategy.withStrategyPattern {
    class theory.behaviour.strategy.withStrategyPattern.DefaultQuackStrategy {
        + quack()
    }
  }
  

  namespace theory.behaviour.strategy.withStrategyPattern {
    class theory.behaviour.strategy.withStrategyPattern.Duck {
        + Duck()
        + performFly()
        + performQuack()
    }
  }
  

  namespace theory.behaviour.strategy.withStrategyPattern {
    interface theory.behaviour.strategy.withStrategyPattern.FlyStrategy {
        {abstract} + fly()
    }
  }
  

  namespace theory.behaviour.strategy.withStrategyPattern {
    class theory.behaviour.strategy.withStrategyPattern.MainClass {
        {static} + main()
    }
  }
  

  namespace theory.behaviour.strategy.withStrategyPattern {
    class theory.behaviour.strategy.withStrategyPattern.NoFlyStrategy {
        + fly()
    }
  }
  

  namespace theory.behaviour.strategy.withStrategyPattern {
    class theory.behaviour.strategy.withStrategyPattern.NoQuackStrategy {
        + quack()
    }
  }
  

  namespace theory.behaviour.strategy.withStrategyPattern {
    interface theory.behaviour.strategy.withStrategyPattern.QuackStrategy {
        {abstract} + quack()
    }
  }
  

  namespace theory.behaviour.strategy.withStrategyPattern {
    class theory.behaviour.strategy.withStrategyPattern.SpecialFlyStrategy {
        + fly()
    }
  }
  

  theory.behaviour.strategy.withStrategyPattern.DefaultFlyStrategy .up.|> theory.behaviour.strategy.withStrategyPattern.FlyStrategy
  theory.behaviour.strategy.withStrategyPattern.DefaultQuackStrategy .up.|> theory.behaviour.strategy.withStrategyPattern.QuackStrategy
  theory.behaviour.strategy.withStrategyPattern.Duck o-- theory.behaviour.strategy.withStrategyPattern.FlyStrategy : flyStrategy
  theory.behaviour.strategy.withStrategyPattern.Duck o-- theory.behaviour.strategy.withStrategyPattern.QuackStrategy : quackStrategy
  theory.behaviour.strategy.withStrategyPattern.NoFlyStrategy .up.|> theory.behaviour.strategy.withStrategyPattern.FlyStrategy
  theory.behaviour.strategy.withStrategyPattern.NoQuackStrategy .up.|> theory.behaviour.strategy.withStrategyPattern.QuackStrategy
  theory.behaviour.strategy.withStrategyPattern.SpecialFlyStrategy .up.|> theory.behaviour.strategy.withStrategyPattern.FlyStrategy


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
